<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.recruit.mapper.CompanyMapper">

	<!--> 비밀번호 변경 때문에 -->
	<update id="updateCpPw">
		update 
		project.tbluser as tu
		set
		tu.pw = #{pw}
		where
		tu.id = #{id}
	</update>
	
	<select id="companyinfoRead" resultType="com.recruit.domain.CInfoVO">
		select
		tci.id, tci.cname, img, homepage, intro, ceo, ctype, form, location, detaillocation,
		establish, numemp, sales, tel, fax, sns, lng, lat , phone, email, tu.pname
		from
		tblcinfo as tci, tbluser as tu
		where
		tci.id = #{id} and tci.id = tu.id  <!--문> email관련 추가 -->
	</select> <!-- 기업정보 출력 -->

	<update id="companyinfoUpdate">
		update
		project.tblcinfo as tci, project.tbluser as tu
		set
		tu.cname =#{cname}, homepage=#{homepage}, intro=#{intro},
		ceo=#{ceo},
		ctype=#{ctype}
		, form=#{form}, establish=#{establish},
		numemp=#{numemp},
		sales=#{sales}, tel=#{tel}, fax=#{fax}, sns=#{sns} ,
		img=#{img}, location=#{location}
		, detaillocation=#{detaillocation}
		, phone=#{phone} , email=#{email}, lat = #{lat}, lng = #{lng}
		where
		tu.id = #{id} and tci.id = tu.id
	</update>

	<!-- <update id="companyinfoUpdate"> update project.tblcinfo set cname =#{cname}, 
		homepage=#{homepage}, intro=#{intro}, ceo=#{ceo}, ctype=#{ctype} , form=#{form}, 
		establish=#{establish}, numemp=#{numemp}, sales=#{sales}, tel=#{tel}, fax=#{fax}, 
		sns=#{sns} , img=#{img} , location=#{location}, phone=#{phone} , email=#{email} 
		문> email=#{email}추가 where id = #{id} </update> 기업정보 수정 -->
	<select id="jobgroupList" resultType="com.recruit.domain.JobGroupVO">
		select
		id, id2, jobgroup
		from
		tbljobgroup
		where id2 = 0 and id != 0
	</select> <!-- 직업 선택 대분류(채용공고 작성) -->



	<select id="subJobgroupList" resultType="com.recruit.domain.JobGroupVO"> <!-- 직업 선택 소분류(채용공고 작성) 4/1일 추가 -->
		select
		id, id2, jobgroup
		from
		tbljobgroup
	
	</select> 
	
	<select id="jobGroupCount" resultType="int"> <!-- 대분류 몇개 있는지 알기위해 사용(채용공고 작성) 4/1일 추가 -->
		select
		count(id)
		from
		tbljobgroup
		where id2 = 0 and jobgroup!= '선택';
	
	</select> 
	
	<select id="regionCount" resultType="int"> <!-- 대분류 몇개 있는지 알기위해 사용(채용공고 작성) 4/1일 추가 -->
	select count(distinct rgbid) 
	from project.tblregion 
	where rgbid!='Z';
	</select>
	
	<select id="appListCount" resultType="int"> <!-- 지원한 사람 페이징 위한 count -->
	SELECT count(t.rcno) FROM tblapply t where t.rcno = #{bno}; 
	</select>
	
	<select id="ajaxSubJobgroup" resultType="JobGroupVO">
		select
		id, jobgroup, id2
		from
		tbljobgroup
		where id2 =
		#{id2}

	</select> <!-- 직업 선택 소분류(채용공고 작성) -->

	<select id="codeList" resultType="com.recruit.domain.CodeVO">
		select
		id, career, tid
		from
		tblcode order by y;
	</select> <!-- 코드 테이블 대분류(채용공고 작성) -->

	<select id="regionList" resultType="com.recruit.domain.RegionVO">
		select
		DISTINCT rgbid, rgbname
		from
		tblregion
		where rgbid != 'Z'
	</select>  <!-- 지역 테이블 대분류(채용공고 작성) -->
	
	<select id="subRegionList" resultType="com.recruit.domain.RegionVO"> <!-- 지역 선택 소분류(채용공고 작성) 4/1일 추가 -->
	
	select rgbid,rgbname,rgsid,rgsname
	 from tblregion
	  where rgbid != 'Z';
	  
	</select>

	<select id="ajaxsubRegion" resultType="com.recruit.domain.RegionVO">

		select
		rgbid, rgbname,
		rgsid,
		rgsname
		from
		tblregion

		where rgbid = #{id2}

	</select> <!-- ajax용 지역 테이블 소분류(채용공고 작성) -->

	<insert id="recruitWrite">
		insert into tblrecruit (title, cid, jobgroupid
		<if test="jobgroupid2 != null">, jobgroupid2</if>
		<if test="jobgroupid2 == null">, jobgroupid2</if>
		, rgbid
		<if test="rgsid != null">,rgsid</if>
		<if test="rgsid == null">,rgsid</if>
		, jobdesc, recruitnum, employstatusid ,salaryid, edu
		, exp, adddesc,period, periodstart, acceptmethod)
		values (#{title}, #{cid}, #{jobgroupid}
		<if test="jobgroupid2 != null">, #{jobgroupid2}</if>
		<if test="jobgroupid2 == null">, 0</if>
		, #{rgbid}
		<if test="rgsid != null">, #{rgsid}</if>
		<if test="rgsid == null">, '102'</if>
		, #{jobdesc}, #{recruitnum}, #{employstatusid}, #{salaryid}, #{edu}, 
		 #{exp}, #{adddesc}, #{period}, #{periodstart}, #{acceptmethod})
	</insert> <!-- 채용공고 작성 -->

<select id="changeCnameToId" resultType="String">

select id
from tblcinfo
where cname = #{cname};
</select>

	<select id="recruitList" resultType="com.recruit.domain.RecruitVO">
 <![CDATA[
 select bno, title, period, viewcnt
  from
   tblrecruit
   where cid = #{id}
 ]]>
	</select> <!-- 채용공고 리스트 (*여러곳에서 사용) -->

	<select id="cRecruitList" resultType="com.recruit.domain.CPersonInfoVO">
		select distinct 
		f.bno,
		title, 
		(select date_format((select e.period from project.tblrecruit e where e.bno = f.bno),'%m/%d')) as period,
		r.rgbname as rgbid, 
		c.career as career, 
		m.career as edu, 
		j.jobgroup as jobgroup1
		from 
		tblrecruit f , tblcode c, tblcode m, tblregion r, tbljobgroup j
		where 
		f.exp = c.id 
		and f.edu = m.id 
		and f.rgbid = r.rgbid 
		and f.jobgroupid = j.id 
		and cid = #{id}
		and f.state = 1;
		
		
	</select>
<!-- CURDATE 소연 추가 -->
	<select id="recruitinfoRead" resultType="com.recruit.domain.RecruitVO">
<![CDATA[
	select distinct r.bno, r.cid, r.title, j.jobgroup as jobgroupid, u.jobgroup as jobgroupid2, g.rgbname as rgbid, datediff(period,date_format(now(),'%Y-%m-%d'))as dday,
	SUBSTR( _UTF8'일월화수목금토', DAYOFWEEK(period), 1) as week, date_format(period,'%m/%d') as endday,
    g.rgsname as rgsid, r.jobdesc, r.recruitnum, c.career as employstatusid, o.career as salaryid, r.periodstart as periodstart,
	 d.career as edu, e.career as exp, r.adddesc, r.period, r.recruitform, r.acceptmethod, r.viewcnt, h.applycnt , h.interestcnt
	, CURDATE() as regdate
		from project.tbljobgroup j, project.tbljobgroup u, project.tblregion g
		, project.tblcode c, project.tblcode o, project.tblcode d, project.tblcode e ,project.tblrecruit r
        LEFT JOIN(select (select count(a.rcno) from tblapply a where a.rcno = #{recruitNum}) as applycnt , (select  count(b.rcbno) from tblinterestjob b where b.rcbno = #{recruitNum})as interestcnt
        from dual)h on  #{recruitNum}= r.bno
	where r.bno = #{recruitNum}
    	and r.jobgroupid = j.id
    	and r.jobgroupid2 = u.id
    	and g.rgbid = r.rgbid
    	and g.rgsid = r.rgsid
    	and r.employstatusid = c.id
    	and r.salaryid = o.id
    	and r.edu = d.id
    	and r.exp = e.id or r.exp = null;
]]>
	</select> <!-- 채용공고 정보 -->


	<select id="ajaxRecruitList"  resultType="com.recruit.domain.RecruitVO">
 <![CDATA[
 select @rownum:=@rownum+1 as rownum, f.bno, title, case when period >= CURDATE() then '모집중' when period = '' then '' ELSE '모집완료' end as recruitstate 
, case when period >= CURDATE() then '수정' when period = '' then '' ELSE '재등록' end as btnstate
,  if(h.applynum != '', h.applynum, 0 )as applynum, f.viewcnt,  if(period != ' ',(select date_format((select e.period from tblrecruit e where e.bno = f.bno),'~ %y/%m/%d')),' ') as period
, if(period != ' ', SUBSTR( _UTF8'일월화수목금토', DAYOFWEEK(period), 1),'')as week, m.career as employstatusid, n.career as exp, j.jobgroup as jobgroupid, i.jobgroup as jobgroupid2, u.pname, f.regdate
  from (select @rownum:=0) a, tblcode n, tblcode m, tbljobgroup j, tbljobgroup i,tbluser u, tblrecruit f LEFT JOIN (select count(if(z.rcno=x.bno,z.rcno,null))as applynum , z.rcno as o from tblapply z,tblrecruit x where  x.bno = z.rcno and x.cid = #{id} group by z.rcno) h on  h.o = f.bno 
  where f.cid = #{id} and period != ' ' and f.employstatusid = m.id and n.id = f.exp and j.id = f.jobgroupid and i.id = f.jobgroupid2 and u.id= f.cid  
  order by bno limit #{page}, 10
 ]]>  
 </select> <!-- ajax용 채용공고 리스트  -->
 <select id="recruitCriteria"  resultType="com.recruit.domain.RecruitVO">
 <![CDATA[
 select @rownum:=@rownum+1 as rownum, f.bno, title, case when period >= CURDATE() then '모집중' when period = '' then '' ELSE '모집완료' end as recruitstate, state
, case when period >= CURDATE() then '수정' when period = '' then '' ELSE '재등록' end as btnstate
,  if(h.applynum != '', h.applynum, 0 )as applynum, p.qcnt ,  f.viewcnt,  if(period != ' ',(select date_format((select e.period from tblrecruit e where e.bno = f.bno),'~ %y/%m/%d')),' ') as period , date_format(periodstart,'%y/%m/%d') as periodstart
, if(period != ' ', SUBSTR( _UTF8'일월화수목금토', DAYOFWEEK(period), 1),'')as week, m.career as employstatusid, n.career as exp, j.jobgroup as jobgroupid, i.jobgroup as jobgroupid2, u.pname, f.regdate
  from (select @rownum:=0) a, tblcode n, tblcode m, tbljobgroup j, tbljobgroup i,tbluser u, tblrecruit f LEFT JOIN (select count(if(z.rcno=x.bno,z.rcno,null))as applynum ,  z.rcno as o from tblapply z,tblrecruit x where  x.bno = z.rcno and x.cid = #{id} group by z.rcno) h on  h.o = f.bno  
  left join(select count(*) as qcnt, q.rbno as rbno from tblrecruitqna q where  atext is null group by q.rbno)p on p.rbno = f.bno
  where f.cid = #{id} and f.employstatusid = m.id and n.id = f.exp and j.id = f.jobgroupid and i.id = f.jobgroupid2 and u.id= f.cid
   ]]>
  <include refid="state"></include>
  <include refid="search"></include>
  <include refid="order"></include>
  <![CDATA[
  limit #{pageStart}, #{perPageNum}
    ]]>
 </select> <!-- ajax용 채용공고 리스트  -->
 
	<update id="updateViewCnt">
		update project.tblrecruit set viewcnt = viewcnt +1
		where
		bno = #{recruitNum}
	</update> <!-- 채용공고 카운터 -->


	<select id="recruitCriteriaCount" resultType="int"> <!-- 전체 공고 몇개 있는지 체크용  -->
<![CDATA[  
select count(bno) from (select @rownum:=0) a, tblcode n, tblcode m, tbljobgroup j, tbljobgroup i,tbluser u, tblrecruit f LEFT JOIN (select count(if(z.rcno=x.bno,z.rcno,null))as applynum , z.rcno as o from tblapply z,tblrecruit x where  x.bno = z.rcno and x.cid = #{id} group by z.rcno) h on  h.o = f.bno 
  where f.cid = #{id} and period != ' ' and f.employstatusid = m.id and n.id = f.exp and j.id = f.jobgroupid and i.id = f.jobgroupid2 and u.id= f.cid and bno > 0
]]>
		<include refid="search"></include>
	</select> 
	
	<select id="ajaxIngRecruitListCount" resultType="int"> <!-- 진행중 공고 몇개 있는지 체크용 -->
  <![CDATA[  
  select count(bno)
  from (select @rownum:=0) a, tblcode n, tblcode m, tbljobgroup j, tbljobgroup i,tbluser u, tblrecruit f LEFT JOIN (select count(if(z.rcno=x.bno,z.rcno,null))as applynum , z.rcno as o from tblapply z,tblrecruit x where  x.bno = z.rcno and x.cid = #{id} group by z.rcno) h on  h.o = f.bno 
  where f.cid = #{id} and period >= curdate() and f.employstatusid = m.id and n.id = f.exp and j.id = f.jobgroupid and i.id = f.jobgroupid2 and u.id= f.cid and bno > 0
	]]>
		<include refid="search"></include>
	</select> 
	
	<select id="ajaxEndRecruitListCount" resultType="int"> <!-- 마감 공고 몇개 있는지 체크용 -->
<![CDATA[  
select count(bno) from (select @rownum:=0) a, tblcode n, tblcode m, tbljobgroup j, tbljobgroup i,tbluser u, tblrecruit f LEFT JOIN (select count(if(z.rcno=x.bno,z.rcno,null))as applynum , z.rcno as o from tblapply z,tblrecruit x where  x.bno = z.rcno and x.cid = #{id} group by z.rcno) h on  h.o = f.bno 
  where f.cid = #{id} and period < curdate() and period != ' ' and f.employstatusid = m.id and n.id = f.exp and j.id = f.jobgroupid and i.id = f.jobgroupid2 and u.id= f.cid and bno > 0
]]>
		<include refid="search"></include>
	</select> 


	<select id="recruitinfoRead3" resultType="com.recruit.domain.RecruitVO">
	
	<![CDATA[	
	select bno, title, cid, jobgroupid, jobgroupid2, rgbid, rgsid, jobdesc, recruitnum, employstatusid, salaryid, edu, exp, adddesc, period, acceptmethod
	from project.tblrecruit
	where bno=#{recruitNum}	
	]]>
	
	</select>
	
	<select id="pcStateCheck" resultType="RecruitVO">
	
	select cname, birth
	from tbluser
	where id = #{id}
	</select>
	
	<sql id="search">
		<if test="searchType != null">
			<if test="searchType == 't'.toString()">
				and title like CONCAT('%', #{keyword}, '%')
			</if>
			<if test="searchType == 'c'.toString()">
				and content like CONCAT('%', #{keyword}, '%')
			</if>
		
		</if>
	</sql>
	
	<sql id="order">
	<if test="orderType != null">
	<if test="orderType == 'appBottom'"> <!-- 지원자수 내림차순 -->
	order by applynum desc
	</if>
	<if test="orderType == 'appTop'"> <!-- 지원자수 오름차순 -->
	order by applynum asc
	</if>
	<if test="orderType == 'endBottom'"> <!-- 마감일 내림차순 -->
	order by f.period desc
	</if>
	<if test="orderType == 'endTop'"> <!-- 마감일 오름차순 -->
	order by f.period asc
	</if>
	<if test="orderType == 'viewBottom'"> <!-- 조회수 내림차순 -->
	order by f.viewcnt desc
	</if>
	<if test="orderType == 'viewTop'"> <!-- 조회수 오름차순 -->
	order by f.viewcnt asc
	</if>
	</if>
	<if test="orderType == null">
	order by bno desc <!-- 아무것도 없으면 bno desc -->
	</if>
	</sql>
	
	
	<sql id="state">
		<if test="State != null">
			<if test="State == '전체'"> <!-- 전체 -->
				and period != ' '
			</if>
			<if test="State == '진행중'"> <!-- 진행 -->
				and period >= curdate() and state != 0
			</if>
			<if test="State == '마감'"> <!-- 마감 -->
				<![CDATA[ 
				and period < curdate() and period != ' '
				]]>
			</if>
		</if>
	</sql>

<update id="changeState" parameterType="HashMap">

update tblrecruit set state = #{state} where bno = #{bno};


</update>
		<select id="reComList" resultType="com.recruit.domain.RecruitVO">
<![CDATA[  
 select @rownum:=@rownum+1 as rownum, f.bno, title, case when period >= CURDATE() then '모집중' when period = '' then '' ELSE '모집완료' end as recruitstate, date_format(periodstart,'%y/%m/%d')as periodstart
, case when period >= CURDATE() then '수정' when period = '' then '' ELSE '재등록' end as btnstate
,  if(h.applynum != '', h.applynum, 0 )as applynum, f.viewcnt,  if(period != ' ',(select date_format((select e.period from tblrecruit e where e.bno = f.bno),'~ %y/%m/%d')),' ') as period
, if(period != ' ', SUBSTR( _UTF8'일월화수목금토', DAYOFWEEK(period), 1),'')as week, m.career as employstatusid, n.career as exp, j.jobgroup as jobgroupid, i.jobgroup as jobgroupid2, u.pname, f.regdate
  from (select @rownum:=0) a, tblcode n, tblcode m, tbljobgroup j, tbljobgroup i,tbluser u, tblrecruit f LEFT JOIN (select count(if(z.rcno=x.bno,z.rcno,null))as applynum , z.rcno as o from tblapply z,tblrecruit x where  x.bno = z.rcno and x.cid = #{id} group by z.rcno) h on  h.o = f.bno 
  where f.cid = #{id} and period >= curdate() and f.employstatusid = m.id and n.id = f.exp and j.id = f.jobgroupid and i.id = f.jobgroupid2 and u.id= f.cid and f.state = 1
]]>
		<include refid="search"></include>
  
<![CDATA[    
  order by bno limit #{pageStart}, #{perPageNum};
]]>
	</select> <!-- 추천 인재에서 공고 검색용  -->
	
	
		<select id="reComListSearchCount" resultType="int">
  <![CDATA[  
  select count(bno)
  from (select @rownum:=0) a, tblcode n, tblcode m, tbljobgroup j, tbljobgroup i,tbluser u, tblrecruit f LEFT JOIN (select count(if(z.rcno=x.bno,z.rcno,null))as applynum , z.rcno as o from tblapply z,tblrecruit x where  x.bno = z.rcno and x.cid = #{id} group by z.rcno) h on  h.o = f.bno 
  where f.cid = #{id} and period >= curdate() and f.employstatusid = m.id and n.id = f.exp and j.id = f.jobgroupid and i.id = f.jobgroupid2 and u.id= f.cid and bno > 0
	]]>
		<include refid="search"></include>
	</select> 

	<select id="ajaxPersonRecomList" resultType="com.recruit.domain.CPersonInfoVO"> <!-- 추천인재 리스트 -->
     select distinct u.pname as name, p.title, c.career as career, m.career as salary, r.rgbname as rgbid, r.rgsname as rgsid, d.career as edu, b.jobgroup as jobgroup1, p.bno
        , o.jobgroup as jobgroup2 ,  datediff(now(), p.regdate) as days, if(datediff(now(), p.regdate) > 0 , ' ', date_format(timediff(now(), p.regdate),'%H%i')) as todays
        from tblresume p, tblrecruit f, tbluser u, tblcode c, tblcode m, tblregion r, tblregion g , tblcode d, tbljobgroup b, tbljobgroup o
	where u.id = p.userid and p.jobgroupid = f.jobgroupid and p.rgbid = f.rgbid and f.bno = #{bno} and c.id = p.lastcareer and m.id = p.salaryid 
    and r.rgbid = p.rgbid and g.rgsid = r.rgsid and p.rgsid = g.rgsid 
    and d.id = p.levelofeducation and b.id = p.jobgroupid and o.id = p.jobgroupid2;
	</select> <!-- 추천인재 리스트(조건이 완전 일치하는 인재만 뜨게끔 돼있음) -->

	<insert id="ajaxFavorPersonAdd" parameterType="hashMap">
		insert into
		tblinterestperson(cuserid, presume) values(#{id}, #{bno});
	</insert> <!-- 관심인재 등록 -->

	<insert id="ajaxFavorPersonDelete" parameterType="hashMap">
		delete from
		tblinterestperson where cuserid = #{id} and presume = #{bno};
	</insert> <!-- 관심인재 삭제 -->
	
	
	


	<select id="favorList" resultType="com.recruit.domain.CPersonInfoVO">
		SELECT distinct p.bno,
		u.pname as name, p.title, r.rgbname as
		rgbid, i.rgsname as rgsid , n.career as salary, c.career as edu, o.career as career , g.jobgroup as jobgroup1, j.jobgroup as jobgroup2,  datediff(now(), regdate) as days, if(datediff(now(), regdate) > 0 , ' ', date_format(timediff(now(), regdate),'%H%i')) as todays
		FROM tblinterestperson f, tblresume p,
		tblregion r, tbluser u , tblcode n, tblcode c, tblcode o, tbljobgroup j, tbljobgroup g, tblregion i
		where f.presume = p.bno and p.rgbid = r.rgbid and u.id = p.userid and n.id = p.salaryid and i.rgsid = p.rgsid and i.rgbid = r.rgbid
        and p.levelofeducation = c.id and p.lastcareer = o.id and j.id = p.jobgroupid2 and g.id = p.jobgroupid 
      and f.cuserid = #{id} order by f.createdate desc;
  <!--   and p.publicornot = '공개'  -->
	</select> <!-- 관심인재 리스트 -->
	
	<select id="favorListCount" resultType="int">
	    SELECT count(presume)
		from tblinterestperson where cuserid = #{id};
	</select>

	<select id="favorCompareList" resultType="com.recruit.domain.CInterestPersonVO">
		select presume from
		tblinterestperson where cuserid = #{id};

	</select> <!-- 추천인재 별표시 비교용 -->




	<select id="cinfoRecruitList" resultType="com.recruit.domain.RecruitVO">

		select distinct r.bno,
		r.cid, r.title, j.jobgroup as jobgroupid, u.jobgroup
		as jobgroupid2, state,
		g.rgbname as rgbid, g.rgsname as rgsid, r.jobdesc,
		r.recruitnum,
		c.career as employstatusid, o.career as salaryid,
		d.career as edu,
		e.career as exp, r.adddesc, r.period, r.acceptmethod
		from
		project.tblrecruit r, project.tbljobgroup j, project.tbljobgroup
		u,
		project.tblregion g, project.tblcode c, project.tblcode o,
		project.tblcode d, project.tblcode e
		where
		r.jobgroupid = j.id
		and r.jobgroupid2 = u.id
		and g.rgbid = r.rgbid
		and g.rgsid = r.rgsid
		and
		r.employstatusid = c.id
		and r.salaryid = o.id
		and r.edu = d.id
		and r.exp
		= e.id
		and r.cid = #{id};
	</select>

	<update id="recruitModify">

		update tblrecruit set
		title= #{title},
		cid=#{cid},
		jobgroupid=#{jobgroupid},
		jobgroupid2=#{jobgroupid2},
		rgbid=#{rgbid},
		rgsid=#{rgsid},
		jobdesc=#{jobdesc},
		recruitnum = #{recruitnum},
		employstatusid = #{employstatusid},
		salaryid = #{salaryid},
		edu =
		#{edu},
		exp = #{exp},
		adddesc = #{adddesc},
		period = #{period},
		acceptmethod = #{acceptmethod},
		recruitform = #{recruitform}

		where
		bno=#{bno} and cid=#{cid};
	</update> <!-- 채용공고 수정 -->

	<select id="recruitModifyRead" resultType="com.recruit.domain.RecruitVO"
		parameterType="hashMap">
		select
		bno,title,cid,jobgroupid,jobgroupid2,rgbid,rgsid,jobdesc,recruitnum,
		employstatusid, salaryid, edu, exp, adddesc, period, periodstart, acceptmethod,
		recruitform, regdate, viewcnt
		from tblrecruit
		where bno = #{bno} and cid
		= #{id};
	</select>
	
	<update id="recruitReRegister" parameterType="hashMap">
	update tblrecruit  set period = DATE_ADD(period, INTERVAL #{day} DAY) where bno = #{bno} and cid = #{id};
	</update>
	
	<delete id="recruitDelete" parameterType="hashMap">
		delete from tblrecruit
		where bno = #{bno} and cid = #{id};
	</delete> <!-- 채용공고 삭제 -->
	
		<update id="endRecruit" parameterType="hashMap">
		
		update tblrecruit  set period = DATE_ADD(now(), INTERVAL -1 DAY) where bno = #{bno} and cid = #{id};
		
		</update> <!-- 채용공고 마감 -->

	<select id="applyList" parameterType="hashMap" resultType="com.recruit.domain.CPersonInfoVO">
		<![CDATA[
		SELECT distinct p.bno,
		u.pname as name, p.title, r.rgbname as
		rgbid, i.rgsname as rgsid , n.career as salary, c.career as edu, o.career as career , g.jobgroup as jobgroup1, j.jobgroup as jobgroup2		
		FROM tblapply a, tblrecruit f,  tblresume p, tbltel t,
		tblregion r, tbluser u , tblcode n, tblcode c, tblcode o, tbljobgroup j, tbljobgroup g, tblregion i
		where p.rgbid = r.rgbid and u.id = p.userid and n.id = p.salaryid and i.rgsid = p.rgsid and i.rgbid = r.rgbid
        and p.levelofeducation = c.id and p.lastcareer = o.id and j.id = p.jobgroupid2 and g.id = p.jobgroupid 
         and a.rcno =  #{bno}  and
		f.bno =  #{bno}  and p.bno = a.rsno
		]]>
		<include refid="pSearch"></include> 
		
		
	</select> <!-- 지원인재 리스트 -->
	
	<sql id="pSearch">
		<if test="pKeyword != null">
			<if test="pSearchType == 'n'.toString()">
				and u.pname like  CONCAT('%', #{pKeyword},'%')
			</if>
			<if test="pSearchType == 'j'.toString()">
				and t.rid = p.bno and t.tel like CONCAT('%', #{pKeyword},'%') 
			</if>
			<if test="pSearchType == 'e'.toString()">
				and u.email like CONCAT('%', #{pKeyword},'%') 
			</if>
		</if>
	</sql>
	
	<delete id="delete">
		delete from project.tbluser
		where project.tbluser.id = #{id}
	</delete>	
	
	<insert id="qnaQuestion">
	
	insert 
	into project.tblrecruitqna(id, rbno, qtype, rqtype, qtext) 
	values (#{id}, #{rbno}, #{qtype},#{rqtype}, #{qtext});
	
	</insert>
	
	<update id="qnaAnswer">
	update 
		project.tblrecruitqna
		set
		atext = #{atext}
		where
		qbno = #{qbno}
	
	</update>
	
	<select id="qnaList" parameterType="HashMap" resultType="com.recruit.domain.RecruitQnAVO">
	select distinct(q.qbno), q.rbno, q.qtext, q.atext, q.qtype, q.rqtype from project.tblrecruitqna q 
	left join(select z.atext, z.qtype, z.rqtype from project.tblrecruitqna z)h on h.qtype where rbno = #{recruitNum}
	order by qbno desc limit #{pageStart}, #{perPageNum}
	</select>
	
	<select id="qnaPageNum" resultType="Int">
	SELECT count(rbno) FROM project.tblrecruitqna where rbno = #{recruitNum};
	</select>
	
</mapper> 